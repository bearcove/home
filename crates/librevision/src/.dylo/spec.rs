// This file is automatically @generated by dylo
// To regenerate, run `dylo gen` in the root of the workspace directory
// For more information, see https://github.com/bearcove/dylo
pub trait Mod: Send + Sync + 'static {
    fn load_initial_revision(
        &self,
        ti: Arc<TenantInfo>,
        web: WebConfig,
    ) -> BoxFuture<'_, CubRevisionState>;
    fn make_revision(
        &self,
        ti: Arc<TenantInfo>,
        spec: RevisionSpec,
        web: WebConfig,
    ) -> BoxFuture<'_, eyre::Result<IndexedRevision>>;
    fn input_hash_from_contents(&self, contents: &[u8]) -> conflux::InputHash;
    fn serialize_pak(&self, pak: &conflux::Pak<'_>) -> Vec<u8>;
    fn load_pak<'fut>(
        &'fut self,
        pak: conflux::Pak<'static>,
        ti: Arc<TenantInfo>,
        prev_rev: Option<&'fut conflux::Revision>,
        mappings: PathMappings,
        web: WebConfig,
    ) -> BoxFuture<'fut, eyre::Result<IndexedRevision>>;
    fn start_watching(
        &self,
        tenant: Arc<dyn cub_types::CubTenant>,
        web: WebConfig,
    ) -> BoxFuture<'_, eyre::Result<()>>;
    fn save_pak_to_disk_as_active<'fut>(
        &'fut self,
        pak: &'fut conflux::Pak<'_>,
        ti: &'fut TenantInfo,
    ) -> BoxFuture<'fut, eyre::Result<()>>;
}
