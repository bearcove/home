name: check
on:
  push:
    branches: [main]
    tags:
      - "*"
  pull_request:
    branches: [main]
jobs:
  mac-build:
    runs-on: depot-macos-latest
    env:
      BEARDIST_CACHE_DIR: /tmp/cache/beardist
      BEARDIST_ARTIFACT_NAME: aarch64-apple-darwin
      GH_READWRITE_TOKEN: ${{ secrets.GH_READWRITE_TOKEN }}
      CLICOLOR: 1
      CLICOLOR_FORCE: 1
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: /tmp/cache
          key: ${{ runner.os }}-${{ matrix.artifact }}-home-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.artifact }}-home-
      - name: Download beardist
        run: |
          curl -L -o beardist.tar.xz https://github.com/bearcove/beardist/releases/download/v1.0.2/aarch64-apple-darwin.tar.xz
          tar -xf beardist.tar.xz
          chmod +x beardist
          sudo mv beardist /usr/local/bin/
      - name: Install required dependencies
        run: |
          # Install pnpm package manager and bun via tap
          brew tap oven-sh/bun
          brew install node pnpm cargo-sweep cargo-nextest just bun coreutils xz dav1d
      - name: Build
        run: |
          beardist build
  linux-build:
    strategy:
      matrix:
        include:
          - runs-on: depot-ubuntu-24.04-16
            platform: linux/amd64
            artifact: x86_64-unknown-linux-gnu
          - runs-on: depot-ubuntu-24.04-arm-16
            platform: linux/arm64
            artifact: aarch64-unknown-linux-gnu
    runs-on: ${{ matrix.runs-on }}
    container:
      image: ghcr.io/bearcove/beardist:latest
    env:
      BEARDIST_CACHE_DIR: /tmp/cache/beardist/${{ matrix.platform }}
      BEARDIST_ARTIFACT_NAME: ${{ matrix.artifact }}
      GH_READWRITE_TOKEN: ${{ secrets.GH_READWRITE_TOKEN }}
      CLICOLOR: 1
      CLICOLOR_FORCE: 1
      IMAGE_PLATFORM: ${{ matrix.platform }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: /tmp/cache
          key: ${{ runner.os }}-${{ matrix.artifact }}-home-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.artifact }}-home-
      - name: Build
        shell: bash
        run: |
          beardist build
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
              echo "we're building a tag! "
              echo "building + pushing the container image"
              regctl registry login ghcr.io -u token -p "${{ secrets.GH_READWRITE_TOKEN }}"
              regctl image inspect ghcr.io/bearcove/home-base:latest
              ./repack.sh
          fi
  trigger-formula-update:
    needs: [mac-build, linux-build]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: depot-ubuntu-24.04-4
    container:
      image: ghcr.io/bearcove/beardist:latest
    env:
      GH_READWRITE_TOKEN: ${{ secrets.GH_READWRITE_TOKEN }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Login to registry
        run: |
          regctl registry login ghcr.io -u token -p "${{ secrets.GH_READWRITE_TOKEN }}"

      - name: Create and push multi-platform manifest
        run: |
          ./multify.sh

      - name: Trigger workflow dispatch for bump.yml
        run: |
          curl -X POST \
            -f \
            -H "Authorization: token ${{ env.GH_READWRITE_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -d '{
              "ref": "main",
              "inputs": {}
            }' \
            https://api.github.com/repos/bearcove/homebrew-tap/actions/workflows/bump.yml/dispatches
